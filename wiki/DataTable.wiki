#sidebar Sidebar
#labels Autogenerated
#summary DataTable is Moriarty's implementation of the Active Record pattern for RDF data.

*note:* this page is automatically generated from embedded documentation in the PHP source.

= Overview =

DataTable is Moriarty's implementation of the Active Record pattern for RDF data. It provides a very simple way to create and run SPARQL queries.


DataTable is the class that constructs the queries. DataTableResult (in datatableresult.class.php) is a class that represents the results of a query. The interface to DataTable takes inspiration from CodeIgniter's Active Record class, adapted slightly for some RDF specifics.

DataTable uses method chaining to make the code more compact and readable. All of the following are equivalent:

<code language="php">
$dt->select('name')->from('person')->limit(5);

$dt->select('name');
$dt->from('person');
$dt->limit(5);

$dt->select('name')->limit(5);
$dt->from('person');
</code>

== Constructors ==
 * [#DataTable DataTable]
== Methods ==
 * [#distinct distinct]
 * [#from from]
 * [#get get]
 * [#get_data_as_graph get_data_as_graph]
 * [#get_differences get_differences]
 * [#get_insert_graph get_insert_graph]
 * [#get_sparql get_sparql]
 * [#get_update_changeset get_update_changeset]
 * [#insert insert]
 * [#limit limit]
 * [#map map]
 * [#optional optional]
 * [#order_by order_by]
 * [#select select]
 * [#set set]
 * [#set_field_defaults set_field_defaults]
 * [#update update]
 * [#where where]
 * [#where_uri where_uri]

= Constructor Detail =

== DataTable ==

{{{
public DataTable(mixed store_uri, mixed credentials, mixed request_factory)
}}}



= Method Detail =

== distinct ==

{{{
public void distinct()
}}}



== from ==

{{{
public void from(mixed type_list)
}}}



== get ==

{{{
public void get()
}}}



== get_data_as_graph ==

{{{
public void get_data_as_graph(mixed s)
}}}



== get_differences ==

{{{
public void get_differences(mixed query_results)
}}}



== get_insert_graph ==

{{{
public void get_insert_graph(mixed type_list)
}}}



== get_sparql ==

{{{
public void get_sparql()
}}}



== get_update_changeset ==

{{{
public void get_update_changeset()
}}}



== insert ==

{{{
public void insert(mixed type_list)
}}}



== limit ==

{{{
public void limit(mixed value, mixed offset)
}}}



== map ==

{{{
public void map(mixed uri_or_array, mixed short_name)
}}}



== optional ==

{{{
public void optional(mixed field_list)
}}}



== order_by ==

{{{
public void order_by(mixed field, mixed ordering)
}}}



== select ==

{{{
public void select(mixed field_list)
}}}



== set ==

{{{
public void set(mixed field, mixed value, mixed type, mixed lang, mixed dt)
}}}



== set_field_defaults ==

{{{
public void set_field_defaults(mixed field, mixed type, mixed datatype)
}}}



== update ==

{{{
public void update()
}}}



== where ==

{{{
public void where(mixed field, mixed value)
}}}



== where_uri ==

{{{
public void where_uri(mixed field, mixed uri)
}}}





Generated by [http://phpdoctor.sourceforge.net/ PHPDoctor 2RC2]
