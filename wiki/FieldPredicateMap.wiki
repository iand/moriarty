#sidebar Sidebar
#labels Autogenerated
#summary Represents a field/predicate map

*note:* this page is automatically generated from embedded documentation in the PHP source.

= Overview =

<dl>
<dt>See Also:</dt>
<dd><a href="http://n2.talis.com/wiki/Field_Predicate_Map">http://n2.talis.com/wiki/Field_Predicate_Map</a></dd>
</dl>
== Constructors ==
 * [#FieldPredicateMap FieldPredicateMap] - Create a new instance of this class
== Methods ==
 * [#add_mapping add_mapping] - Add a mapping between a predicate URI and a short name.
 * [#copy_to copy_to] - Copies the mappings and other properties into new field/predicate map  Any URIs that are prefixed by the source field/predicate map's URI will be converted to  be prefixed with this field/predicate map's URI    For example    http://example.org/source/fpmaps/1#name  Would become    http://example.org/destination/fpmaps/1#name
 * [#remove_mapping remove_mapping] - Remove a mapping between a predicate URI and a short name.

== Methods inherited from Moriarty.NetworkResource ==

 *delete_from_network
 *get_comment
 *get_from_network
 *get_label
 *put_to_network
 *set_comment
 *set_label
== Methods inherited from Moriarty.SimpleGraph ==

 *add_graph
 *add_json
 *add_labelling_property
 *add_literal_triple
 *add_rdf
 *add_rdfxml
 *add_resource_triple
 *add_turtle
 *diff
 *from_json
 *from_rdfxml
 *from_turtle
 *get_description
 *get_first_literal
 *get_first_resource
 *get_index
 *get_label
 *get_literal_triple_values
 *get_prefix
 *get_resource_triple_values
 *get_subject_properties
 *get_subject_property_values
 *get_subject_subgraph
 *get_subjects
 *get_subjects_of_type
 *get_subjects_where
 *get_subjects_where_literal
 *get_subjects_where_resource
 *get_triples
 *has_literal_triple
 *has_resource_triple
 *has_triples_about
 *is_empty
 *make_resource_array
 *merge
 *qname_to_uri
 *reify
 *remove_all_triples
 *remove_literal_triple
 *remove_property_values
 *remove_resource_triple
 *remove_triples_about
 *replace_resource
 *set_namespace_mapping
 *subject_has_property
 *to_html
 *to_json
 *to_ntriples
 *to_rdfxml
 *to_turtle
 *update_prefix_mappings
 *uri_to_qname
= Constructor Detail =

== FieldPredicateMap ==

{{{
public FieldPredicateMap(string uri, <a href="../moriarty/credentials.html">Credentials</a> credentials)
}}}

Create a new instance of this class<dl>
<dt>Parameters:</dt>
<dd>uri - URI of the field/predicate map</dd>
<dd>credentials - the credentials to use for authenticated requests (optional)</dd>
</dl>


= Method Detail =

== add_mapping ==

{{{
public string add_mapping(string p, string name, string analyzer)
}}}

Add a mapping between a predicate URI and a short name. Returns the URI of the new mapping.<dl>
<dt>Parameters:</dt>
<dd>p - the URI of the predicate to map</dd>
<dd>name - the short name to assign to the predicate</dd>
<dd>analyzer - the URI of the analyzer to apply to this predicate (optional)</dd>
</dl>


== copy_to ==

{{{
public FieldPredicateMap copy_to(mixed new_uri)
}}}

Copies the mappings and other properties into new field/predicate map  Any URIs that are prefixed by the source field/predicate map's URI will be converted to  be prefixed with this field/predicate map's URI    For example<br/>    http://example.org/source/fpmaps/1#name<br/>  Would become<br/>    http://example.org/destination/fpmaps/1#name<br/><dl>
<dt>Author:</dt>
<dd>Ian Davis</dd>
</dl>


== remove_mapping ==

{{{
public void remove_mapping(string p, string name)
}}}

Remove a mapping between a predicate URI and a short name.<dl>
<dt>Parameters:</dt>
<dd>p - the URI of the predicate being mapped</dd>
<dd>name - the short name assigned to the predicate</dd>
</dl>


