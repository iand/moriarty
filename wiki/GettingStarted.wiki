#summary The basics of using Moriarty
#labels Featured
#sidebar Sidebar

= Introduction =

Moriarty is a simple PHP library for accessing the Talis Platform. It follows the Platform API very closely and wraps up many common tasks into convenient classes while remaining very lightweight. It also provides some simple classes for working with RDF in general. Moriarty is being developed by small community of developers and is in continual beta, subject to a slow stream of updates.

= Dependencies =

Moriarty requires Benjamin Novack's excellent [http://arc.semsol.org/ ARC libary for RDF processing] (later than version 2008-08-04). If you want to run the unit tests (you probably do) then you will also need [http://www.phpunit.de/ PHPUnit] version 3.3.0 or later

= Environment =

Moriarty uses a couple of constants to locate itself and its dependencies such as ARC. You should set these to the appropriate paths before you use Moriarty like this:

<code language="php">
define('MORIARTY_DIR', '/var/www/lib/moriarty/');
define('MORIARTY_ARC_DIR', '/var/www/lib/arc_2008_11_18/');
</code>

*Note:* these paths should include a trailing slash

The moriarty uses a simple naming convention for files. Files containing class definitions are named as {name}.class.php and the corresponding tests for the class are in a file called {name}.test.php in the tests subdirectory. Files named like {name}.inc.php are general purpose include files containing useful functions and constants. 
 
To include a set of useful constants for popular property and class URIs add the following to your code:

<code language="php">
require_once MORIARTY_DIR . 'moriarty.inc.php';
</code>


= Hello, World!= 

The Hello World for any Platform app is performing a simple search on a store. Here's how you could do that using Moriarty:

<code language="php">
require_once 'store.class.php';
require_once 'constants.inc.php';
 
$store = new Store('http://api.talis.com/stores/ukbib');
$contentbox = $store->get_contentbox();
 
$results = $contentbox->search_to_resource_list("feynman", 10, 0);
echo '<h1>' . $results->title . '</h1>';
foreach ($results->items as $item) {
  echo '<p><a href="' . $item[RSS_LINK][0] . '">' . $item[RSS_TITLE][0] . '</a></p>';
}
</code>
