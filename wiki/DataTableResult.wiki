#sidebar Sidebar
#labels Autogenerated
#summary Represents a set of results returned from a DataTable query.

*note:* this page is automatically generated from embedded documentation in the PHP source.

= Overview =

== Constructors ==
 * [#DataTableResult DataTableResult]
== Methods ==
 * [#num_fields num_fields] - Returns the number of fields in the result set.
 * [#num_rows num_rows] - Returns the number of rows in the result set.
 * [#result result] - Returns the query result as an array of objects, or an empty array on any failure.
 * [#result_array result_array] - Returns the query result as an array of associative arrays, or an empty array on any failure.
 * [#row row]
 * [#row_array row_array] - Returns an associative array containing a single result row.
 * [#rowdata rowdata] - Returns an associative array containing metadata about the values in the specified row.
 * [#to_string to_string] - Returns a tabular string representation of the results.

= Constructor Detail =

== DataTableResult ==

{{{
public DataTableResult(mixed data, mixed uri)
}}}



= Method Detail =

== num_fields ==

{{{
public void num_fields()
}}}

Returns the number of fields in the result set.

== num_rows ==

{{{
public void num_rows()
}}}

Returns the number of rows in the result set.

== result ==

{{{
public void result()
}}}

Returns the query result as an array of objects, or an empty array on any failure. Each field in the original query is mapped to an object variable.

For example:

<code language="php">
$dt = new DataTable('http://api.talis.com/stores/mystore');
$dt->map('http://xmlns.com/foaf/0.1/name', 'name');
$dt->map('http://xmlns.com/foaf/0.1/nick', 'nick');
$dt->select('name,nick')->limit(10);
$res = $dt->get();
foreach ($res->result() as $row) {
   echo $row->name;
   echo $row->nick;
}
</code>

== result_array ==

{{{
public void result_array()
}}}

Returns the query result as an array of associative arrays, or an empty array on any failure. The keys and values of the associative array correspond with the fields and values in the results.

For example:

<code language="php">
$dt->select('name,nick')->limit(10);
$res = $dt->get();

foreach ($res->result_array() as $row) {
   echo $row['name'];
   echo $row['nick'];
}
</code>

== row ==

{{{
public void row(mixed index)
}}}



== row_array ==

{{{
public void row_array(mixed index)
}}}

Returns an associative array containing a single result row. The $index parameter is optional and defaults to zero.

== rowdata ==

{{{
public void rowdata(mixed index)
}}}

Returns an associative array containing metadata about the values in the specified row. The array keys correspond to field names and the values to another associative array containing the metadata for that field's value. The $index parameter is optional and defaults to zero.

The following metadata keys are available:

<ul>
<li>type - the type of the field's value, one of "uri", "bnode" or "literal"</li>
<li>datatype - the datatype of a literal value, or null if no datatype was detected</li>
<li>lang - the language code of a literal value, or null if no language was detected</li>
</ul>
For example:

<code language="php">
$dt->select('name,nick')->limit(10);
$res = $dt->get();
$rowdata = $res->rowdata(5);
echo $rowdata['name']['type'];
echo $rowdata['name']['lang'];
echo $rowdata['name']['datatype'];
</code>

== to_string ==

{{{
public void to_string()
}}}

Returns a tabular string representation of the results.



Generated by [http://phpdoctor.sourceforge.net/ PHPDoctor 2RC2]
